<?php

namespace NL\NlAuth\ViewHelpers;

use NL\NlAuth\Type\LoginType;
use TYPO3\CMS\Extbase\Configuration\ConfigurationManagerInterface;
use TYPO3\CMS\Extbase\Reflection\ObjectAccess;
use TYPO3\CMS\Fluid\ViewHelpers\Link\PageViewHelper;

class LogoutLinkViewHelper extends PageViewHelper
{
    /**
     * @var ConfigurationManagerInterface
     */
    protected $configurationManager;

    protected $settings;

    protected $frameworkConfiguration;

    /**
     * @param ConfigurationManagerInterface $configurationManager
     */
    public function injectConfigurationManager(ConfigurationManagerInterface $configurationManager)
    {
        $this->configurationManager = $configurationManager;

        $this->frameworkConfiguration = $this
            ->configurationManager
            ->getConfiguration(ConfigurationManagerInterface::CONFIGURATION_TYPE_FRAMEWORK);

        $this->settings = $this
            ->configurationManager
            ->getConfiguration(
                ConfigurationManagerInterface::CONFIGURATION_TYPE_SETTINGS,
                $this->frameworkConfiguration['nl_auth'],
                $this->frameworkConfiguration['user']
            );
    }

    /**
     * @param null $pageUid
     * @param array $additionalParams
     * @param int $pageType
     * @param bool $noCache
     * @param bool $noCacheHash
     * @param string $section
     * @param bool $linkAccessRestrictedPages
     * @param bool $absolute
     * @param bool $addQueryString
     * @param array $argumentsToBeExcludedFromQueryString
     * @param null $addQueryStringMethod
     * @return string
     */
    public function render($pageUid = null, array $additionalParams = [], $pageType = 0, $noCache = false, $noCacheHash = false, $section = '', $linkAccessRestrictedPages = false, $absolute = false, $addQueryString = false, array $argumentsToBeExcludedFromQueryString = [], $addQueryStringMethod = null)
    {
        $additionalParams = array_merge([
            'logintype' => LoginType::LOGOUT,
        ]);

        $pageUid = $pageUid ?: ObjectAccess::getPropertyPath($this->settings, 'login.page');

        return parent::render($pageUid, $additionalParams, $pageType, $noCache, $noCacheHash, $section, $linkAccessRestrictedPages, $absolute, $addQueryString, $argumentsToBeExcludedFromQueryString, $addQueryStringMethod); // TODO: Change the autogenerated stub
    }
}